<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Z PYRO</title><description>Dedicated to helping you become a stunning developer.</description><link>http://localhost:2368/</link><generator>Ghost 0.11</generator><lastBuildDate>Mon, 20 Feb 2017 06:04:21 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Learn linear-gradient() by designing a complex chess pattern</title><description>Imma show you how to create smooth patterns and stripes to add a touch of professionalism to your design.
Then we will design a chess board using CSS3.</description><link>http://localhost:2368/learn-linear-gradient-by-designing-a-complex-chess-pattern/</link><guid isPermaLink="false">0286c7fd-2d36-4c86-9360-426e0ee001e9</guid><category>CSS</category><dc:creator>NedalKouissi</dc:creator><pubDate>Tue, 06 Dec 2016 23:50:40 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/02/chess-140340-min.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2017/02/chess-140340-min.jpg" alt="Learn linear-gradient() by designing a complex chess pattern"&gt;&lt;p&gt;You can read and watch previous episodes &lt;a href="http://www.zpyro.com/tag/css/"&gt;here!&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;

&lt;p&gt;This is what you'll design by the end of this tutorial&lt;/p&gt;

&lt;p&gt;You'll be able to do it with the help of &lt;code&gt;linear-gradient()&lt;/code&gt; and on top of that, Imma show you how to create smooth patterns and stripes to add a touch of professionalism to your design.&lt;/p&gt;

&lt;h2 id="1whatsthebasicusage"&gt;1. What's the basic usage?&lt;/h2&gt;

&lt;p&gt;This is the syntax of &lt;code&gt;linear-gradient()&lt;/code&gt;. I took it from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient"&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient([ [ [ &amp;lt;angle&amp;gt; | to [top | bottom] || [left | right] ],]? &amp;lt;color-stop&amp;gt;[, &amp;lt;color-stop&amp;gt;]+);  
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;What the hell is that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of your future time will be spent on documentation, so I should probably make it easy for you.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/IXLmqzFKuqyCQ?html5=true" width="100%" height="301" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;brackets&lt;strong&gt;[]&lt;/strong&gt; to make a group.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;anything followed by &lt;strong&gt;?&lt;/strong&gt;, means it's not required and it could be skipped.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;|&lt;/strong&gt; that's OR. I'm just saying don't get mad.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in our example we have &lt;code&gt;[left | right]&lt;/code&gt; which means we can add the keyword &lt;strong&gt;left&lt;/strong&gt; or &lt;strong&gt;right&lt;/strong&gt; to &lt;code&gt;linear-gradient()&lt;/code&gt; also we can omit them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whenever you see &lt;strong&gt;+&lt;/strong&gt; know that you can have as many as you want of that property value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Back to our example, we have &lt;code&gt;[, &amp;lt;color-stop&amp;gt;]+&lt;/code&gt; it means we can add as much &lt;em&gt;colors-stop&lt;/em&gt; as we want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Still confused?&lt;/strong&gt; No worries, imma show you how I did the first part &lt;em&gt;step by step&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[ [ [ &amp;lt;angle&amp;gt; | to [top | bottom] || [left | right] ],]?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First, I looked out for the first comma &lt;code&gt;,&lt;/code&gt; everything before it, is just &lt;strong&gt;one&lt;/strong&gt; value property.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[ Value property ,]?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and that value property isn't required, becuase it's wrapped inside &lt;strong&gt;[]?&lt;/strong&gt;  so we can omit it if we want to.&lt;/p&gt;

&lt;p&gt;all we have now is &lt;br&gt;
&lt;code&gt;value property&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;in other words&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[ &amp;lt;angle&amp;gt; | to [top | bottom] || [left | right] ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first option here is the angle, something like &lt;code&gt;45deg&lt;/code&gt; or &lt;code&gt;90deg&lt;/code&gt;. &lt;br&gt;
The second option is the keyword &lt;code&gt;to&lt;/code&gt; followed by top &lt;em&gt;or&lt;/em&gt; bottom and what's interesting is &lt;em&gt;top or bottom&lt;/em&gt; could also be followed by &lt;em&gt;left or right&lt;/em&gt;. You can tell it by &lt;code&gt;||&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Okay here's some combination I &lt;em&gt;could&lt;/em&gt; make.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(45deg);  
background: linear-gradient(to top);  
background: linear-gradient(to bottom left);  
background: linear-gradient(to bottom right);  
background: linear-gradient(to left);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you have abilities to read the second part &lt;code&gt;&amp;lt;color-stop&amp;gt;[, &amp;lt;color-stop&amp;gt;]+&lt;/code&gt;.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/3o7aTCbTctRjgnKCpq" width="100%" height="364" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Open your text editor and follow, I'll start with &lt;code&gt;div&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class="box"&amp;gt;&amp;lt;/div&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in css imma add&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.box {
  width: 50%;
  height: 6em;
  background: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we'll have something like this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;liner-gradient&lt;/code&gt; is a function that goes with &lt;code&gt;background&lt;/code&gt; or &lt;code&gt;background-image&lt;/code&gt;. Let's remove that red color and replace it with this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(to right, black, white);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the results are&lt;/p&gt;

&lt;p&gt;I could also have written the last line as follow  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black, white);  
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wait, when should I use &lt;code&gt;deg&lt;/code&gt; instead of keywords?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what keywords can do  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;to top  
to top left  
to top right

to bottom  
to bottom left  
to bottom right

to left  
to right  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you see they are limited, so if you need more control or you feel lazy to type, go with &lt;code&gt;deg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Things get interesting when we add percentages to any color stop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 10%, red);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now it's time to understand how &lt;em&gt;color stop&lt;/em&gt; work.&lt;/p&gt;

&lt;p&gt;Setting both black and red at 50%&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 50%, red 50%);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;there is no &lt;em&gt;fade in&lt;/em&gt; or &lt;em&gt;fade out&lt;/em&gt;, between these two colors.&lt;/p&gt;

&lt;p&gt;let's change black to 40%. I added a blue separator to help you understand what's going on&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 40%, red 50%);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;black is painted from 0% to 40% &lt;br&gt;
red is painted from 50% to 100%&lt;/p&gt;

&lt;p&gt;The blue separator is 40% from the left, Red color started at 50%, the fade happened in between that 40% 50% space. &lt;br&gt;
You get it ?&lt;/p&gt;

&lt;p&gt;something else you need to know, this line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 40%, red 50%);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is equally the same as this line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(
    90deg, 
    black 0%, black 40%,
    red 50%, red 100%
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the picture must be clear, But It gets complicated when we start adding more than two colors, for that reason imma show you how to deal with it.&lt;/p&gt;

&lt;p&gt;You still remember when we did &lt;code&gt;50% black, 50% red&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Because we have two different colors at the same position, the transition between these two is &lt;em&gt;none&lt;/em&gt; rather than &lt;em&gt;smooth&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now I need to show you how to create the same effect in a different way, it'll come in handy when we start using multiple colors&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 50%, red 0);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We set the second color's position at &lt;code&gt;0&lt;/code&gt;, the browser will automatically adjust its position to be equal to the previous color stop, which is 50%.&lt;/p&gt;

&lt;p&gt;When I use multiple colors stop, I always start simple something like below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg,  
  #BFBDC1 20%,
  #6D6A75 0, #6D6A75 40%,
  #1E1C22 0, #1E1C22 60%,
  #DEB841 0, #DEB841 80%,
  #DE9E36 0, #DE9E36
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;color1 ends at 20% &lt;br&gt;
color 2 starts at 20% &lt;br&gt;
color3 starts at 40% &lt;br&gt;
color4 starts at 60% &lt;br&gt;
color5 starts at 80%&lt;/p&gt;

&lt;p&gt;Then I change the smoothness between colors to my taste&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg,  
  #BFBDC1 10%,
  #6D6A75 30%,
  #1E1C22 40%,
  #DEB841 80%,
  #DE9E36
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I've removed all hard colors stop &lt;code&gt;colorX 0,&lt;/code&gt;, they were there as guides no more :)&lt;/p&gt;

&lt;p&gt;now we have something like this&lt;/p&gt;

&lt;p&gt;It's much easier to lay down your colors then fade them till you get the end result.&lt;/p&gt;

&lt;p&gt;You can create beautiful fades with this technique&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg,  
  #EAEAEA 4%,
  #C1C1C2 30%,
  #98979A 40%,
  #6F6E72 80%,
  #323036
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="2howtocreatepatternsusinglinearbackground"&gt;2. How to create patterns using linear-background?&lt;/h2&gt;

&lt;p&gt;Let's create something that we may often encounter in our daily basis. &lt;br&gt;
Tiny patterns to spice any background you want, in our example we'll work on &lt;code&gt;body {}&lt;/code&gt;.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  repeating-linear-gradient(90deg, 
    #EAEAEA 0, #EAEAEA 20%,
    white 0, #EAEAEA 40%,
    white 0, #EAEAEA 60%
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wait, REPEATING? What's that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It works exactly like linear-background, but It repeats the pattern automatically.&lt;/p&gt;

&lt;p&gt;So this is what I have&lt;/p&gt;

&lt;p&gt;By now, you're more than able to do the same. Let's see what will happen if we make that pattern so small via &lt;code&gt;background-size&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-size: 0.2em 1em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the end result is&lt;/p&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/12/Screenshot-from-2016-12-06-00-38-30.png" alt="Learn linear-gradient() by designing a complex chess pattern"&gt;&lt;/p&gt;

&lt;p&gt;Beautiful right ?&lt;/p&gt;

&lt;h2 id="3takeittothenextlevel"&gt;3. Take it to the next level&lt;/h2&gt;

&lt;iframe src="//gifs.com/embed/future-wicked-k5BYPX" frameborder="0" scrolling="no" width="100%" height="360px" style="-webkit-backface-visibility: hidden;-webkit-transform: scale(1);" '=""&gt;&lt;/iframe&gt;

&lt;p&gt;Wouldn't be nice if we spice it a bit with some randomness? So the user wouldn't be able to notice the repitive pattern.&lt;/p&gt;

&lt;p&gt;I'ma choose some bright colors to make it easy for you to follow.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repeating-linear-gradient(90deg,  
    black 0, black 20%,
    red 0, red 40%,
    white 0, #EAEAEA 60%
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is what we have&lt;/p&gt;

&lt;p&gt;We need to go back to &lt;code&gt;linear-gradient&lt;/code&gt; instead of &lt;code&gt;repeating-linear-gradient&lt;/code&gt;, because we gonna layer them so we could add randomness to make it look less repetitive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linear-gradient(90deg,  
    black 0, black 20%,
    red 0, red 40%,
    white 0, #EAEAEA 60%
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The pattern ain't repetitive anymore, we need to create that repetition manually&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(90deg, 
    black 0, black 20%,
    red 0, red 40%,
    white 0, #EAEAEA 60%,
    red 0, red 80%,
    black 0, black
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;results are now similar to our previous &lt;code&gt;repeating-linear-gradient&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When we type &lt;code&gt;black 20%, red 0&lt;/code&gt;, we're saying that we want 20% of space to be black then after that we will have a new color stop which will be red. &lt;br&gt;
ignore red for now and act like you don't know what the next color could be.&lt;/p&gt;

&lt;p&gt;I can write the previous line as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: linear-gradient(90deg, black 20%, transparent 0);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;guess what? Now I can layer the second red color stop like the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(90deg, black 20%, transparent 0),
  linear-gradient(90deg, red 40%, transparent 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And after layering all the remaining layers here's the final result&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(90deg, black 20%, transparent 0),
  linear-gradient(90deg, red 40%, transparent 0),
  linear-gradient(90deg, #EAEAEA 60%, transparent 0),
  linear-gradient(90deg, red 80%, transparent 0),
  linear-gradient(90deg, black 100%, transparent 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Back to &lt;code&gt;background-size&lt;/code&gt; we can achieve some crazy randomness by controlling each color stop space&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-size:  
  2em 100%,
  1.6em 100%,
  1.4em 100%,
  1em 100%,
  0.8em 100%;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To maximize it more, I'ma use prime numbers. This trick could also help when it comes to &lt;strong&gt;animation&lt;/strong&gt; &lt;em&gt;(I mean prime numbers).&lt;/em&gt;  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(90deg, black 19%, transparent 0),
  linear-gradient(90deg, red 41%, transparent 0),
  linear-gradient(90deg, #EAEAEA 61%, transparent 0),
  linear-gradient(90deg, red 83%, transparent 0),
  linear-gradient(90deg, black 97%, transparent 0);
  background-size: 19px 100%;
background-size:  
  19px 100%,
  13px 100%,
  17px 100%,
  7px 100%,
  10px 100%;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cool, now I can safely go to my favorite colors, As a said before I used these colors just to make it easy for you to follow :)&lt;/p&gt;

&lt;p&gt;And you can also change &lt;code&gt;deg&lt;/code&gt; of each layer &lt;br&gt;
for example, the first layer is &lt;code&gt;90deg&lt;/code&gt;, the second could be &lt;code&gt;45deg&lt;/code&gt; and so on ...&lt;/p&gt;

&lt;p&gt;This is the final result&lt;/p&gt;

&lt;p&gt;You can choose extreme light colors to make it blend very well with the white &lt;code&gt;body&lt;/code&gt; background.&lt;/p&gt;

&lt;h2 id="4letsdesignacheckboard"&gt;4. Let's design a checkboard!&lt;/h2&gt;

&lt;p&gt;You might think it's easy to make a checkboard pattern in CSS.  That's true, but it's quite trickier than one might expect.&lt;/p&gt;

&lt;p&gt;I'ma start with triangles&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;body {  
  background: 
    linear-gradient(45deg, black 25%, transparent 0);
  background-size: 1em 1em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we flip each color stop we can create triangles of the opposite direction and you know what will happen if we merge the two layers.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hold on, Triangles! Why?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may think creating two squares will solve the problem, but in CSS you can't create space around them and when the layer merge will happen, all you gonna see is a solid background.&lt;/p&gt;

&lt;p&gt;Now, if we combine the two tringle layers, this is what we gonna see&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
    linear-gradient(45deg, black 25%, transparent 0),
    linear-gradient(45deg, transparent 75%, black 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order to combine them into a square, we need to nudge the second layer by half the tile size&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background:  
  linear-gradient(45deg, black 25%, transparent 0),
  linear-gradient(45deg, transparent 75%, black 0);
background-size: 1em 1em;  
background-position: 0 0, 0.5em 0.5em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I'm going to double all layers and nudge them, then change the colors&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;body {  
  background-color: #E7E8E8;
  background-image: 
    linear-gradient(45deg, #D0D2D1 25%, transparent 0),
    linear-gradient(45deg, transparent 75%, #B9BBBB 0),
    linear-gradient(45deg, #8B8E8E 25%, transparent 0),
    linear-gradient(45deg, transparent 75%, #A2A5A4 0);
  background-size: 4em 4em;
  background-position:
    0 0,
    2em 2em,
    2em 2em,
    4em 4em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And finally :)&lt;/p&gt;

&lt;h2 id="5whatsnext"&gt;5. What's next?&lt;/h2&gt;

&lt;p&gt;I'm hard working on creating new training video series to drastically help you become a stunning web developer.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://paypal.me/Zpyro"&gt;Donate&lt;/a&gt; to help make these training courses FREE. &lt;strong&gt;Learning can’t wait.&lt;/strong&gt;
 &lt;a href="http://paypal.me/Zpyro"&gt;Paypal.me/Zpyro&lt;/a&gt;&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/3o8dp4wkEBpLiDEZ3y?html5=true&amp;hideSocial=true" width="100%" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;Zpyro&lt;/em&gt; Youtube Channel is &lt;a href="http://www.youtube.com/channel/UCdb_IhnfM39bL2964cmPWNA?sub_confirmation=1"&gt;here&lt;/a&gt;, Subscribe to get notified when I launch these courses.&lt;/p&gt;</content:encoded></item><item><title>Position any background image with offsets in all corners</title><description>How would you position a background image, `0.4em` from the right border and `1em` from the bottom border.
Can you make it totally responsive ?</description><link>http://localhost:2368/position-any-background-image-with-offsets-to-any-container-corner/</link><guid isPermaLink="false">964da563-6bf3-42c4-94b6-e8c9bdbef851</guid><category>CSS</category><dc:creator>NedalKouissi</dc:creator><pubDate>Mon, 28 Nov 2016 12:16:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/02/pexels-photo-167699--1--min.jpeg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2017/02/pexels-photo-167699--1--min.jpeg" alt="Position any background image with offsets in all corners"&gt;&lt;p&gt;You can read and watch previous episodes &lt;a href="http://www.zpyro.com/tag/css/"&gt;here!&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="whatstheproblem"&gt;What's the problem?&lt;/h4&gt;

&lt;p&gt;It'll be an easy task if I told you to position a background image, &lt;code&gt;0.4em&lt;/code&gt; from the left border &lt;strong&gt;&amp;amp;&lt;/strong&gt; &lt;code&gt;1em&lt;/code&gt; from the top border. Right ? &lt;br&gt;
&lt;img src="http://i.imgur.com/zqvgj45.png" alt="Position any background image with offsets in all corners"&gt;
&lt;mark&gt;The word &lt;strong&gt;"OR NAH."&lt;/strong&gt; is a background image&lt;/mark&gt;.&lt;/p&gt;

&lt;p&gt;but, what about &lt;code&gt;1em&lt;/code&gt; from the bottom border and &lt;code&gt;0.2em&lt;/code&gt; from the right border ?&lt;/p&gt;

&lt;p&gt;Of course, you'll have an answer, I did too. Sadly it wasn't the best.&lt;/p&gt;

&lt;p&gt;I used to calculate the &lt;em&gt;width&lt;/em&gt; and the &lt;em&gt;height&lt;/em&gt; of the box, then I use subtraction. &lt;br&gt;
In our example &lt;code&gt;1em&lt;/code&gt; from the bottom means &lt;code&gt;box height - 1em&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That's totally okay, but in &lt;em&gt;responsive design&lt;/em&gt; this solution is useless.&lt;/p&gt;

&lt;p&gt;My next solution was to insert this background image as an actual &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt;, so I could play with the layout. It works all the time, but adding extra markup just to solve a CSS issue is a big no-no.&lt;/p&gt;

&lt;p&gt;Often times, the design is much complex than our example and because of that, I always end up with a very mangled and ugly HTML code. &lt;br&gt;
Also if I wanted in the future to change the style, I'll need to go back and read the markup and ask myself &lt;em&gt;why I did certain things in a certain way&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In CSS3, we're able to solve this problem so easily. First, we'll learn how then we'll practice by creating this album cover.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/bk1VN06.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;h1 id="1flexiblebackgroundpositioning"&gt;1. flexible background positioning&lt;/h1&gt;

&lt;p&gt;To control the position of any background image, we use the property &lt;code&gt;background-position&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These 3 syntax below are quite popular, but they are not capable of accepting an offset.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: bottom left;  
background-position: 10% 20%;  
background-position: 1em 2em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first value is for the x-axis and the second is for the y-axis.&lt;/p&gt;

&lt;p&gt;The initial value of &lt;code&gt;background-position&lt;/code&gt; is 0%.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: 0% 0%;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="11backgroundpositioncanacceptoffsets"&gt;1.1 background-position can accept offsets&lt;/h4&gt;

&lt;p&gt;We can express &lt;code&gt;1em&lt;/code&gt; from the bottom border and &lt;code&gt;0.2em&lt;/code&gt; from the left border as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: bottom 1em left 0.2em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for some reasons this syntax is not mentioned at &lt;a href="https://developer.mozilla.org/en/docs/Web/CSS/background-position"&gt;MDN&lt;/a&gt;. &lt;em&gt;I don't know why!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/71BPaKF.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;now we can easily switch it back to any corner with the exact measurement we want, all we need to do is change the keyword &lt;code&gt;left&lt;/code&gt; to &lt;code&gt;right&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: bottom 1em right 0.2em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/oQjEw5Y.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;h4 id="12calcfunction"&gt;1.2 calc function&lt;/h4&gt;

&lt;p&gt;If i said &lt;code&gt;background-position: bottom right;&lt;/code&gt;, That means 100% bottom and 100% right and I could express it like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: 100% 100%;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if I could subtract the value that I'm aiming for as an offset. &lt;br&gt;
the function &lt;code&gt;calc&lt;/code&gt; can do this for me.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: calc(100% - 1em) calc(100% - 0.2em);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as a result, we'll have something like this&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/oQjEw5Y.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;h4 id="13backgroundoriginpadding"&gt;1.3 Background origin &amp;amp; Padding&lt;/h4&gt;

&lt;p&gt;Remember, last episode when we used &lt;code&gt;background-clip&lt;/code&gt;, the concept is similar.&lt;/p&gt;

&lt;p&gt;for example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: top;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We know that each CSS element has for boxes&lt;/p&gt;

&lt;p&gt;&lt;img src="https://www.kasandbox.org/programming-images/misc/boxmodel.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;so what box do &lt;code&gt;top&lt;/code&gt; refer to?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;border box?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nop, by default it refers to the padding box, using &lt;code&gt;background-origin&lt;/code&gt; we can change it to &lt;em&gt;content-box&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-position: bottom right;  
background-origin: content-box;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;now we can add padding, to achieve what we want.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box-sizing: border-box;  
padding: 0 0.2em 1em 0  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as a result&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/oQjEw5Y.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;As you see I've used &lt;code&gt;border-box&lt;/code&gt; to make sure any extra padding will not increase or change the box size.&lt;/p&gt;

&lt;h4 id="14whosbetter"&gt;1.4 Who's better?&lt;/h4&gt;

&lt;p&gt;The first method is more readable, but let's say we don't know the offset and we can only calculate it via &lt;em&gt;javascript&lt;/em&gt; at render time. 'calc' will suit better.&lt;/p&gt;

&lt;p&gt;There's no who's best unless we're talking about performance and to be honest, I don't know who performs better.&lt;/p&gt;

&lt;h1 id="2letspractice"&gt;2. Let's practice&lt;/h1&gt;

&lt;p&gt;Last month I released &lt;strong&gt;Nuclin&lt;/strong&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/u5PTdoQ99cw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Nuclin&lt;/strong&gt; is a soundtrack album, there's no need for me to be concerned about including the &lt;em&gt;Explicit&lt;/em&gt; flag into my album cover.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/11/superthumb.jpg" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;But you know what, let's redesign the album cover and add the &lt;em&gt;Explicit&lt;/em&gt; flag to it.&lt;/p&gt;

&lt;p&gt;first download the cover from &lt;a href="http://i.imgur.com/JIRXdg6.png"&gt;here&lt;/a&gt;, and let's start.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class="card"&amp;gt;  
  &amp;lt;img src="" alt="Nuclin Album cover" /&amp;gt;
  &amp;lt;div class="topLayer"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; is our cover. &lt;br&gt;
&lt;code&gt;.topLayer&lt;/code&gt; will hold the &lt;em&gt;Explicit&lt;/em&gt; flag.&lt;/p&gt;

&lt;p&gt;Everything is wrapped inside &lt;code&gt;.card&lt;/code&gt;,so adding more elements will be easier in the future.&lt;/p&gt;

&lt;p&gt;in our CSS, I'm gonna start with this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.card {
  width: 40%;
}

img {  
  max-width: 100%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/9fRH1MF.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;let's quickly add a little bit of &lt;code&gt;box-shadow&lt;/code&gt; to the &lt;code&gt;img&lt;/code&gt; &lt;br&gt;
Tweak the shadows to your taste, this is what I came up with&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/TVP0puE.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;Back to &lt;code&gt;.topLayer&lt;/code&gt;, as I said we'll put the &lt;em&gt;explicit&lt;/em&gt; flag as a &lt;code&gt;background-image&lt;/code&gt; in this &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, we need &lt;code&gt;.topLayer&lt;/code&gt; to be in the same &lt;code&gt;.card&lt;/code&gt; size.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.topLayer {
  background-color: blue;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I'm trying to stretch &lt;code&gt;.topLayer&lt;/code&gt; to it nearest relative, then I'm painting the whole layer with blue. &lt;br&gt;
Now before I check if the whole &lt;code&gt;.card&lt;/code&gt; is covered with blue, I must specify who's the relative&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.card {
  width: 40%;
  position: relative;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we go&lt;/p&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/11/Screenshot-from-2016-11-28-13-56-58.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;You can remove the blue background and instead insert the &lt;em&gt;Explicit&lt;/em&gt; flag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background: url(http://bit.ly/2gc3vRn) no-repeat;  
background-position: calc(100% - 0.4em) calc(100% - 1em);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/11/Screenshot-from-2016-11-28-14-01-53.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;to make the bottom of our album cover blend well with the white background. I will add an extra layer on top of everything&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class="shine"&amp;gt;&amp;lt;/div&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;.shine {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, the relative is &lt;code&gt;body&lt;/code&gt; and that's exactly what we want.&lt;/p&gt;

&lt;p&gt;I'm going to make this layer white at the bottom and transparent at the top&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.shine {
  background: linear-gradient(180deg, transparent, white);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's our final result&lt;/p&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/11/Screenshot-from-2016-11-28-14-09-50.png" alt="Position any background image with offsets in all corners"&gt;&lt;/p&gt;

&lt;p&gt;You can make the blend less obvious by lowering the opacity of &lt;code&gt;.shine&lt;/code&gt;&lt;/p&gt;

&lt;h1 id="3whatsnext"&gt;3. What's next?&lt;/h1&gt;

&lt;p&gt;See you next episode :)&lt;/p&gt;</content:encoded></item><item><title>How to add depth to your design using multiple borders</title><description>Using box-shadow, outlines, background-clip to create multiple borders.
Creating multiple orders helps to add depth and realism to your design.</description><link>http://localhost:2368/how-to-add-depth-to-your-design-using-multiple-borders/</link><guid isPermaLink="false">7b3fa49c-e9ef-4b2c-be86-2b32d44d381a</guid><category>CSS</category><dc:creator>NedalKouissi</dc:creator><pubDate>Wed, 23 Nov 2016 12:09:16 GMT</pubDate><content:encoded>&lt;p&gt;You can read and watch previous episodes &lt;a href="http://www.zpyro.com/tag/css/"&gt;here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="isthereanyusecases"&gt;Is there any use cases?&lt;/h2&gt;

&lt;p&gt;Back in the days, they were so many ugly hacks to achieve multiple borders, now in &lt;em&gt;CSS3&lt;/em&gt; you can create similar results in a neat and straightforward way, and it's a good trick you can add to your &lt;em&gt;CSS arsenal&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Below as you see, I've used various borders, to add depth to the right card.&lt;/p&gt;

&lt;p data-height="563" data-theme-id="light" data-slug-hash="NbjyjJ" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="NbjyjJ" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/NbjyjJ/"&gt;NbjyjJ&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;Here is another use case example. &lt;br&gt;
You can imagine how many &lt;code&gt;&amp;lt;dev&amp;gt;&lt;/code&gt; elements we need to create this &lt;em&gt;color palette&lt;/em&gt;, but with multiple borders &lt;strong&gt;one CSS line&lt;/strong&gt; was enough. Plus it's &lt;em&gt;responsive&lt;/em&gt;. Yep!&lt;/p&gt;

&lt;p data-height="265" data-theme-id="light" data-slug-hash="ENmgpx" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="ENmgpx" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/ENmgpx/"&gt;ENmgpx&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;&lt;em&gt;also, multiple borders shines when it comes to animation.&lt;/em&gt; &lt;/p&gt;

&lt;h3 id="part1howtoachievemultiplebordersincss3"&gt;Part1. How to achieve multiple borders in CSS3&lt;/h3&gt;

&lt;p&gt;In the upcoming sections, we'll learn how to create more than one border using multiple techniques.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/ftXvsSyRzKXXG?html5=true&amp;hideSocial=true" width="100%" height="360" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h5 id="11multiplebordersviaboxshadow"&gt;1.1 Multiple borders via box-shadow&lt;/h5&gt;

&lt;p&gt;There's a fourth parameter that &lt;code&gt;box-shadow&lt;/code&gt; accept, it's called &lt;em&gt;spread radius&lt;/em&gt;. &lt;br&gt;
If we combined &lt;em&gt;spread radius&lt;/em&gt; with zero radius and zero blur, like you see below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-color: #c0392b;  
box-shadow: 0 0 0 1em #ecf0f1;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We get a solid border. Something like this&lt;/p&gt;

&lt;p data-height="265" data-theme-id="light" data-slug-hash="MbmjMM" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="MbmjMM" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/MbmjMM/"&gt;MbmjMM&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;If we want to add another border, we need to stack another line to &lt;code&gt;box-shadow&lt;/code&gt; with a comma separate.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box-shadow: 0 0 0 1em red,   /* border 1 */  
            0 0 0 2em blue,  /* border 2 */
            0 0 0 3em black, /* border 3 */
            0 0 0 4em pink;  /* border 4 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In our previous example, &lt;strong&gt;border1&lt;/strong&gt; is our top layer, &lt;strong&gt;border2&lt;/strong&gt; is underneath &lt;strong&gt;border1&lt;/strong&gt;, &lt;em&gt;etc ...&lt;/em&gt; &lt;br&gt;
All &lt;code&gt;box-shadows&lt;/code&gt; are overlaid one on top of the other, always add the &lt;em&gt;SUM of previous layer sizes + the desired new border size.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;for example, if I wanted &lt;em&gt;border3&lt;/em&gt; to be 3em in size: this is how you should do the math :D&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;border1&lt;/strong&gt; size + &lt;strong&gt;border2&lt;/strong&gt; size) + &lt;strong&gt;border3&lt;/strong&gt; desired size&lt;/p&gt;

&lt;p&gt;that means&lt;/p&gt;

&lt;p&gt;(1em + 2em) + 3em = &lt;strong&gt;6em&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What about the top, right, bottom or left?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You won't need radius for that, &lt;em&gt;vertical shadow&lt;/em&gt; or &lt;em&gt;horizontal shadow&lt;/em&gt; is enough. &lt;br&gt;
The example below, will make it clear.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box-shadow: 0 -1em 0 red,    /* top border */  
            1em 0 0 blue,    /* right border */
            0 1em 0 black,   /* bottom border */
            -1em 0 0 yellow; /* left border */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;here you can see it live&lt;/p&gt;

&lt;p data-height="265" data-theme-id="light" data-slug-hash="ZBKBoO" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="ZBKBoO" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/ZBKBoO/"&gt;ZBKBoO&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;&lt;mark&gt;notes&lt;/mark&gt; :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use the keyword &lt;code&gt;inset&lt;/code&gt;, if you wanna capture mouse events on these &lt;em&gt;fake&lt;/em&gt; borders.&lt;/li&gt;
&lt;li&gt;Shadows don't affect layout, not like borders. The &lt;code&gt;box-sizing&lt;/code&gt; property won't count them unless you put them inside the box, by using &lt;code&gt;inset&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id="12multiplebordersviaoutline"&gt;1.2 Multiple borders via outline&lt;/h5&gt;

&lt;p&gt;Bad news first, &lt;strong&gt;outline&lt;/strong&gt; can only produce one border, but if we combine &lt;code&gt;outline&lt;/code&gt; &amp;amp; &lt;code&gt;border&lt;/code&gt; we'll have a total of 2.&lt;/p&gt;

&lt;p&gt;here's an example :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;border: 1em solid black;   /* Border 1 */  
outline: 1em solid yellow; /* Border 2 */  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The downside of using &lt;code&gt;outline&lt;/code&gt; is sharp corners, sadly &lt;em&gt;outlines&lt;/em&gt; do not follow rounding through &lt;code&gt;border-radius&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id="13multiplebordersviabackgroundclip"&gt;1.3 Multiple borders via background clip&lt;/h5&gt;

&lt;p&gt;I dedicated a whole episode for background clip. I'll move fast, but if you have any difficulties you can read the previous episode &lt;a href="http://www.zpyro.com/background-clip/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By controlling the painting area using &lt;code&gt;background-clip&lt;/code&gt;, you can fake it to make it look like you have a border.&lt;/p&gt;

&lt;p&gt;here's an example :&lt;/p&gt;

&lt;p data-height="265" data-theme-id="light" data-slug-hash="bBWLbx" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="bBWLbx" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/bBWLbx/"&gt;bBWLbx&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;As you see, i implemented only right borders, and I've used a mix of &lt;code&gt;box-shadow&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt; and &lt;code&gt;background-clip&lt;/code&gt;. &lt;br&gt;
The first white border was a result of using &lt;code&gt;background-clip&lt;/code&gt;, to break it down. Here's how!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-color: #f1c40f;  
background-clip: content-box;  
/*
  Setting background clip to content box will make
  Background-color only paint the content box,
  padding &amp;amp; border box will stay untouched
*/

padding-right: 1em; /* This is our fake border */  
border-right: 1em solid #e67e22; /* This is border2 */  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a result, you'll have something like this&lt;/p&gt;

&lt;p data-height="265" data-theme-id="light" data-slug-hash="aBWEgv" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="aBWEgv" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/aBWEgv/"&gt;aBWEgv&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;h3 id="part2applyitinareallifeexample"&gt;Part2. Apply it in a real life example&lt;/h3&gt;

&lt;p&gt;There's no need to make things complicated, all you need to do is play with &lt;em&gt;shades&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.card2 {
  box-shadow: 0.08em 0.03em 0 #C2C2C8, /*Strong color*/
              0.2em 0.1em 0 #EDEDF4,   /*less stronger*/
              0.3em 0.2em 0 #EEEEF5,   /*less less*/
              0.3em 0.3em 0 #F0F0F6;   /*less less less*/
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's trial and error, the more borders you add, the more depth you'll have. It'll take a little bit of experiment, but you'll get there. &lt;br&gt;
I only spent 5min. Results are below.&lt;/p&gt;

&lt;p data-height="563" data-theme-id="light" data-slug-hash="NbjyjJ" data-default-tab="result" data-user="IDSFN" data-embed-version="2" data-pen-title="NbjyjJ" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/IDSFN/pen/NbjyjJ/"&gt;NbjyjJ&lt;/a&gt; by IDSFN (&lt;a href="http://codepen.io/IDSFN"&gt;@IDSFN&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;  

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;h2 id="whatsnext"&gt;What's next ?&lt;/h2&gt;

&lt;p&gt;See you in the next episode :D&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/l396O8kn1qbPcb4ha?html5=true" width="100%" height="269" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;</content:encoded></item><item><title>How To create a translucent border or padding without background color</title><description>By specifying the painting area, we can create a translucent border or add padding to the background (padding without background color), and much more</description><link>http://localhost:2368/background-clip/</link><guid isPermaLink="false">4e62df18-8c2c-40e1-8eff-638a14018da1</guid><category>CSS</category><dc:creator>NedalKouissi</dc:creator><pubDate>Sun, 20 Nov 2016 15:16:30 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/02/pexels-photo-68357-min.jpeg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2017/02/pexels-photo-68357-min.jpeg" alt="How To create a translucent border or padding without background color"&gt;&lt;p&gt;You can read and watch previous episodes &lt;a href="http://www.zpyro.com/tag/css/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="part1whatstheproblem"&gt;Part1. What's the problem ?&lt;/h4&gt;

&lt;p&gt;Applying a translucent dotted border to a solid background.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/kk6zyw1u/4/embed/html,result/"&gt;&lt;/script&gt;

&lt;p&gt;Above is a visual to understand the problem easily, click on &lt;em&gt;results button&lt;/em&gt; to see what I'm talking about.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;box1 &lt;em&gt;(I applied dotted border)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;box2 (I tried to make it translucent, but the background is underneath, Oh snap!)&lt;/li&gt;
&lt;li&gt;box3 &lt;em&gt;(Problem fixed, no *background&lt;/em&gt; vs &lt;em&gt;border&lt;/em&gt; clash!)*&lt;/li&gt;
&lt;li&gt;box4 &lt;em&gt;(I added padding, see how padding didn't get painted)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll explain how I did it from &lt;em&gt;box2&lt;/em&gt; to &lt;em&gt;box3&lt;/em&gt; &amp;amp; &lt;em&gt;box4&lt;/em&gt;, after that, we will apply our knowledge to create something interesting &lt;em&gt;like you see below!&lt;/em&gt;&lt;/p&gt;

&lt;script async src="//jsfiddle.net/y4de2yjv/2/embed/html,css,result/"&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sounds good ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;iframe src="//giphy.com/embed/3oz8xQQP4ahKiyuxHy" width="100%" height="352" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h4 id="part2howtoachieveatranslucentborder"&gt;Part2. How to achieve a translucent border ?&lt;/h4&gt;

&lt;p&gt;let's start with a red box&lt;/p&gt;

&lt;script async src="//jsfiddle.net/dhf097uo/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;then let's add a solid blue border&lt;/p&gt;

&lt;script async src="//jsfiddle.net/dhf097uo/1/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;after that let's make it a bit translucent, to do that we must convert &lt;code&gt;HEX&lt;/code&gt; to &lt;code&gt;HSLA&lt;/code&gt; or &lt;code&gt;RGBA&lt;/code&gt;, that way we can control the &lt;em&gt;opacity&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#34495e&lt;/code&gt; is equal to &lt;code&gt;rgba(52, 73, 94, 1)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;now replace the old HEX value within your &lt;em&gt;border&lt;/em&gt; parameters, and choose the suitable opacity, something like this&lt;/p&gt;

&lt;script async src="//jsfiddle.net/dhf097uo/2/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Now we need to fix that &lt;strong&gt;border&lt;/strong&gt; vs &lt;strong&gt;background&lt;/strong&gt; clach&lt;/p&gt;

&lt;p&gt;By default the &lt;code&gt;background-color&lt;/code&gt; paints&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Content Box&lt;/li&gt;
&lt;li&gt;The Padding Box&lt;/li&gt;
&lt;li&gt;&amp;amp; The Border Box&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;All at once, DAMN!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below is the &lt;em&gt;CSS Box Model&lt;/em&gt;, so you could see what I'm talking about.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://jharaphula.com/wp-content/uploads/2016/05/box-model.gif" alt="How To create a translucent border or padding without background color"&gt;&lt;/p&gt;

&lt;p&gt;Also, you can inspect using the &lt;em&gt;developer tools&lt;/em&gt; what we've just designed, to see clearly the box model in action&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/blog.thewcc.com/20160728014006/inspect-element-box-model.png" alt="How To create a translucent border or padding without background color"&gt;&lt;/p&gt;

&lt;p&gt;All we need to do is to change that behavior, we can specify where the &lt;em&gt;painting&lt;/em&gt; must stop by using &lt;em&gt;background-clip&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Here's all the properties that background-clip can take &lt;br&gt;
&lt;code&gt;background-clip: border-box|padding-box|content-box|initial|inherit;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Okay, back to our code, let's add &lt;code&gt;background-clip: padding-box;&lt;/code&gt;&lt;/p&gt;

&lt;script async src="//jsfiddle.net/dhf097uo/3/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Cool, but what if I added a little bit of padding to the box? &lt;br&gt;
The box will grow and that extra space will be painted in red :D, if this is not what you desire, go ahead and change &lt;em&gt;background-clip&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;background-clip: content-box;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this is the end result&lt;/p&gt;

&lt;script async src="//jsfiddle.net/dhf097uo/4/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Now, let's create something cool and interesting. &lt;em&gt;but this time I want you to code with me.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is what we gonna create (don't forget to hover)&lt;/p&gt;

&lt;script async src="//jsfiddle.net/y4de2yjv/2/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;&lt;mark&gt;Remember all episodes are about practical learning.&lt;/mark&gt;&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/XdzAYATLJjSNO?html5=true" width="100%" height="420" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h4 id="part3applytheknowledge"&gt;Part3. Apply the knowledge.&lt;/h4&gt;

&lt;p&gt;let's start with a simple &lt;code&gt;F&lt;/code&gt; letter&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h2&amp;gt;F&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I'm kinda trying to create a social &lt;code&gt;facebook&lt;/code&gt; button, so probably you should wrap F in &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Next, I want to add a light blue background and color &lt;code&gt;F&lt;/code&gt; with dark blue&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/1/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;as you see, &lt;code&gt;F&lt;/code&gt;, ain't in the center, let's center it &lt;em&gt;Horizontally&lt;/em&gt; and &lt;em&gt;vertically&lt;/em&gt;.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/2/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Cool, I guess it's time to add a tiny hover effect to our button. &lt;br&gt;
On hover the background and the letter will switch colors, also the mouse cursor will change to &lt;code&gt;pointer&lt;/code&gt; &lt;br&gt;
as you see below.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/3/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;it'll be much better if we slow down the transition, &lt;br&gt;
also adding &lt;code&gt;ease-in-out&lt;/code&gt; will make it so smooth.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/4/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Nice, let's add &lt;code&gt;border&lt;/code&gt; to the left and a little of bit of &lt;code&gt;padding&lt;/code&gt; to separate the left &lt;em&gt;border&lt;/em&gt; with the actual &lt;em&gt;background&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;border-left: 0.1em solid #3b5999;  
padding-left: 0.1em;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You'll notice that &lt;code&gt;padding-left&lt;/code&gt; didn't actually create any separation. WHY ? &lt;br&gt;
I guess you already know, but if you didn't follow part1, the &lt;code&gt;background&lt;/code&gt; paints the whole &lt;code&gt;CSS Box Model&lt;/code&gt; by default, including the padding box and the border box.&lt;/p&gt;

&lt;p&gt;That's why you saw an increase in size but you didn't see any separation between the border and the background. &lt;br&gt;
And as I said before to change this behavior we need to use &lt;code&gt;background-clip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After adding &lt;code&gt;background-clip: content-box;&lt;/code&gt; that's what we have so far, as a result&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;Note.&lt;/mark&gt; I changed &lt;code&gt;padding-left&lt;/code&gt; to a higher value to make it obvious.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/5/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Inside &lt;code&gt;h2:hover&lt;/code&gt; let's add this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;padding-left: 0;  
transition: background 0.3s ease-in-out,  
            padding 0.2s linear;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;setting padding to &lt;code&gt;O&lt;/code&gt; and adding a bit of transition will make the button move toward the &lt;em&gt;border&lt;/em&gt; in a slick motion.&lt;/p&gt;

&lt;p&gt;but wait, where's the border ?&lt;/p&gt;

&lt;p&gt;the &lt;em&gt;border&lt;/em&gt; now is in the same background color, so let's give it a different color.&lt;/p&gt;

&lt;p&gt;´border-left: 0.2em solid #ecf0f1;´&lt;/p&gt;

&lt;p&gt;By far this is what we have&lt;/p&gt;

&lt;script async src="//jsfiddle.net/5nzt4r41/6/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;If you still remember the result I've introduced at the end of  &lt;em&gt;Part2&lt;/em&gt; is different than what we accomplished right now.&lt;/p&gt;

&lt;p&gt;Your task now is to complete it until you create something similar to this&lt;/p&gt;

&lt;script async src="//jsfiddle.net/y4de2yjv/5/embed/html,css,result/"&gt;&lt;/script&gt;

&lt;p&gt;&lt;mark&gt;Hint.&lt;/mark&gt; The &lt;em&gt;border&lt;/em&gt; must increase in size, so it'll look like we are moving to the right, also change the color to white, that way it'll appear like it disappears.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please don't look at the code unless you try, so it'll get stuck to your brain.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id="conclusion"&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;See you in episode 3, soon I'll introduce exercises and projects :)&lt;/p&gt;</content:encoded></item><item><title>2Questions to constantly ask while writing CSS! EP1</title><description>Writing DRY and maintainable, flexible CSS code.</description><link>http://localhost:2368/2questions-to-constantly-ask-while-writing-css-ep1-2/</link><guid isPermaLink="false">88efa69a-db7a-4913-a645-7b174183a543</guid><category>CSS</category><dc:creator>NedalKouissi</dc:creator><pubDate>Sat, 12 Nov 2016 22:46:04 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/02/pexels-photo-164381.jpeg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2017/02/pexels-photo-164381.jpeg" alt="2Questions to constantly ask while writing CSS! EP1"&gt;&lt;p&gt;Writing &lt;strong&gt;DRY&lt;/strong&gt; and &lt;strong&gt;maintainable&lt;/strong&gt;, &lt;strong&gt;flexible&lt;/strong&gt; code is a huge topic and squeezing it only in 1 post is quite hard. &lt;br&gt;
For that reason, I'll teach you two questions you should ask yourself whenever you write any CSS code, so your &lt;strong&gt;code&lt;/strong&gt; will be in a much better state.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wait, Why should I care?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are working on a big project, you'll suffer. Easy things will start to get hard to tweak because all you have is a mangled, hard to manage code. &lt;br&gt;
Writing code that looks GOOD and performs GOOD is what you should aim for all the time. &lt;br&gt;
Let's focus today on "&lt;strong&gt;D&lt;/strong&gt;on't &lt;strong&gt;R&lt;/strong&gt;epeat &lt;strong&gt;Y&lt;/strong&gt;ourself" AKA &lt;strong&gt;DRY&lt;/strong&gt;.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/xT9KVzPCX9M708747S?html5=true&amp;hideSocial=true" width="100%" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3 id="q1isitscalable"&gt;Q1: Is it scalable?&lt;/h3&gt;

&lt;script async src="//jsfiddle.net/zpyro/6x9f0jjb/1/embed/css,result/"&gt;&lt;/script&gt;

&lt;p&gt;What if I change &lt;code&gt;font-size: 18px;&lt;/code&gt; to &lt;code&gt;font-size: 45px;&lt;/code&gt; &lt;br&gt;
do you think other related effects like &lt;code&gt;drop-shadow&lt;/code&gt; will scale ? &lt;mark&gt;Absouletely not!&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;Shortly we will introduce redundant code.&lt;/p&gt;

&lt;p&gt;to fix it, switch from &lt;code&gt;px&lt;/code&gt; to &lt;code&gt;%&lt;/code&gt; or &lt;code&gt;em&lt;/code&gt; or &lt;code&gt;rem&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Yeah, I do that all the time, that's responsive design basics!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We usually sleep on effects, and we think it won't make that much difference.&lt;/p&gt;

&lt;h3 id="q2doesitdoonlyoneparticularthing"&gt;Q2: Does it do only one particular thing?&lt;/h3&gt;

&lt;p&gt;Each function must do only one particular job without mutating the state.&lt;/p&gt;

&lt;p&gt;Same idea of Functional programming, to keep it simple ignore &lt;strong&gt;mutate&lt;/strong&gt; and replace &lt;code&gt;function&lt;/code&gt; with &lt;code&gt;class&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;in reality, it's &lt;strong&gt;impossible&lt;/strong&gt; to create 100% functional CSS for the whole project. &lt;br&gt;
Just like code coverage, nobody can get it to a 100%.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/l3V0o7QyRb08irLag?html5=true" width="100%" height="258" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;This where we left our code previously&lt;/p&gt;

&lt;script async src="//jsfiddle.net/zpyro/0hh5jjv1/3/embed/html,css,result/"&gt;&lt;/script&gt;

&lt;p&gt;Now, with some changes&lt;/p&gt;

&lt;script async src="//jsfiddle.net/zpyro/t92zejkf/1/embed/html,css,result/"&gt;&lt;/script&gt;

&lt;p&gt;I managed the old code into new small classes. &lt;br&gt;
Each one of them performs a specific job. All classes are more likely now to get re-used in any new button in our project. That way no code duplication will be introduced in the future. &lt;br&gt;
For now, I only have buttons, but you can go deeper than the example, and be much precise.&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/3oEjHTVIBFxYiJKRTW?html5=true&amp;hideSocial=true" width="100%" height="359" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3 id="lesscodeviaresponsivedesign"&gt;Less code via responsive design&lt;/h3&gt;

&lt;p&gt;The more responsive your design is, the few media queries you'll use.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here are some points you should pay attention to&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Always use &lt;strong&gt;%&lt;/strong&gt;, &lt;strong&gt;ems&lt;/strong&gt;, &lt;strong&gt;vw&lt;/strong&gt; or &lt;strong&gt;vh&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Aim for &lt;code&gt;max-width&lt;/code&gt; when you want a fixed width for large resolution, so it'll adapt automatically to smaller resolutions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set any replaced elements such as img, object, video, iframe to &lt;code&gt;max-width: 100%;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scale your images via &lt;code&gt;object-fit&lt;/code&gt; or &lt;code&gt;background-size: cover;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use FlexBox for your layout.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;mark&gt;If you find yourself with so many media query rules, go back and re-examine your code.&lt;/mark&gt;&lt;/p&gt;

&lt;iframe src="//giphy.com/embed/R3stZdF3eCUcE?html5=true&amp;hideSocial=true" width="100%" height="363" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3 id="whatsnext"&gt;What's next?&lt;/h3&gt;

&lt;p&gt;we'll start coding in the next episode. We will be in touch more than twice a week, this is your &lt;strong&gt;Show&lt;/strong&gt; :D.&lt;/p&gt;</content:encoded></item></channel></rss>